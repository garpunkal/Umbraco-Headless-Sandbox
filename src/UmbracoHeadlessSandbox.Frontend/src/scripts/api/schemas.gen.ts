// This file is auto-generated by @hey-api/openapi-ts

export const $AccordionElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/AccordionPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $AccordionItemElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/AccordionItemPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $AccordionItemPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $AccordionPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        tabs: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $ApiBlockGridAreaModel = {
    type: 'object',
    properties: {
        alias: {
            type: 'string'
        },
        rowSpan: {
            type: 'integer',
            format: 'int32'
        },
        columnSpan: {
            type: 'integer',
            format: 'int32'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiBlockGridItemModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockGridItemModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/ApiBlockItemModel'
        }
    ],
    properties: {
        rowSpan: {
            type: 'integer',
            format: 'int32'
        },
        columnSpan: {
            type: 'integer',
            format: 'int32'
        },
        areaGridColumns: {
            type: 'integer',
            format: 'int32'
        },
        areas: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiBlockGridAreaModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockItemModel = {
    type: 'object',
    properties: {
        content: {
            '$ref': '#/components/schemas/IApiElementModel'
        },
        settings: {
            '$ref': '#/components/schemas/IApiElementModel'
        }
    },
    additionalProperties: false
} as const;

export const $ApiBlockListModel = {
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                oneOf: [
                    {
                        '$ref': '#/components/schemas/ApiBlockItemModel'
                    },
                    {
                        '$ref': '#/components/schemas/ApiBlockGridItemModel'
                    }
                ]
            }
        }
    },
    additionalProperties: false
} as const;

export const $ApiLinkModel = {
    type: 'object',
    properties: {
        url: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        queryString: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        title: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        target: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        destinationId: {
            type: 'string',
            format: 'uuid',
            nullable: true,
            readOnly: true
        },
        destinationType: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        linkType: {
            '$ref': '#/components/schemas/LinkTypeModel'
        }
    },
    additionalProperties: false
} as const;

export const $BannerElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/BannerPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $BannerPropertiesModel = {
    type: 'object',
    properties: {
        banners: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        }
    }
} as const;

export const $CarouselElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/CarouselPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $CarouselItemElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/CarouselItemPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $CarouselItemPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        image: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        }
    }
} as const;

export const $CarouselPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        carouselItems: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $GenericContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/GenericPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $GenericContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/GenericContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $GenericPropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/SettingsPropertiesModel'
        },
        {
            '$ref': '#/components/schemas/BannerPropertiesModel'
        }
    ],
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        content: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $HomepageContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/HomepagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $HomepageContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/HomepageContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $HomepagePropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/BannerPropertiesModel'
        }
    ],
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        content: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        emailAddress: {
            type: 'string',
            nullable: true
        },
        logo: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        },
        searchPlaceholder: {
            type: 'string',
            nullable: true
        },
        copyright: {
            type: 'string',
            nullable: true
        },
        footerLinks: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiLinkModel'
            },
            nullable: true
        }
    }
} as const;

export const $HttpValidationProblemDetails = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/ProblemDetails'
        }
    ],
    properties: {
        errors: {
            type: 'object',
            additionalProperties: {
                type: 'array',
                items: {
                    type: 'string'
                }
            }
        }
    },
    additionalProperties: {}
} as const;

export const $IApiContentModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/HomepageContentModel'
        },
        {
            '$ref': '#/components/schemas/GenericContentModel'
        },
        {
            '$ref': '#/components/schemas/PeopleContentModel'
        },
        {
            '$ref': '#/components/schemas/PersonContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiContentModelBase = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            homepage: '#/components/schemas/HomepageContentModel',
            generic: '#/components/schemas/GenericContentModel',
            people: '#/components/schemas/PeopleContentModel',
            person: '#/components/schemas/PersonContentModel'
        }
    }
} as const;

export const $IApiContentResponseModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/HomepageContentResponseModel'
        },
        {
            '$ref': '#/components/schemas/GenericContentResponseModel'
        },
        {
            '$ref': '#/components/schemas/PeopleContentResponseModel'
        },
        {
            '$ref': '#/components/schemas/PersonContentResponseModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiContentResponseModelBase = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        cultures: {
            type: 'object',
            additionalProperties: {
                '$ref': '#/components/schemas/IApiContentRouteModel'
            },
            readOnly: true
        },
        name: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        route: {
            '$ref': '#/components/schemas/IApiContentRouteModel'
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            homepage: '#/components/schemas/HomepageContentResponseModel',
            generic: '#/components/schemas/GenericContentResponseModel',
            people: '#/components/schemas/PeopleContentResponseModel',
            person: '#/components/schemas/PersonContentResponseModel'
        }
    }
} as const;

export const $IApiContentRouteModel = {
    type: 'object',
    properties: {
        path: {
            type: 'string',
            readOnly: true
        },
        startItem: {
            '$ref': '#/components/schemas/IApiContentStartItemModel'
        }
    },
    additionalProperties: false
} as const;

export const $IApiContentStartItemModel = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        path: {
            type: 'string',
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $IApiElementModel = {
    type: 'object',
    oneOf: [
        {
            '$ref': '#/components/schemas/TextWithImageElementModel'
        },
        {
            '$ref': '#/components/schemas/PromotionalImageElementModel'
        },
        {
            '$ref': '#/components/schemas/TabbedContentElementModel'
        },
        {
            '$ref': '#/components/schemas/TabbedContentItemElementModel'
        },
        {
            '$ref': '#/components/schemas/AccordionElementModel'
        },
        {
            '$ref': '#/components/schemas/AccordionItemElementModel'
        },
        {
            '$ref': '#/components/schemas/CarouselElementModel'
        },
        {
            '$ref': '#/components/schemas/CarouselItemElementModel'
        },
        {
            '$ref': '#/components/schemas/TwoUpElementModel'
        },
        {
            '$ref': '#/components/schemas/TextColumnElementModel'
        },
        {
            '$ref': '#/components/schemas/SettingsElementModel'
        },
        {
            '$ref': '#/components/schemas/SitemapElementModel'
        },
        {
            '$ref': '#/components/schemas/RichTextElementModel'
        },
        {
            '$ref': '#/components/schemas/BannerElementModel'
        }
    ],
    additionalProperties: false
} as const;

export const $IApiElementModelBase = {
    type: 'object',
    properties: {
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        contentType: {
            type: 'string',
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false,
    discriminator: {
        propertyName: 'contentType',
        mapping: {
            textWithImage: '#/components/schemas/TextWithImageElementModel',
            promotionalImage: '#/components/schemas/PromotionalImageElementModel',
            tabbedContent: '#/components/schemas/TabbedContentElementModel',
            tabbedContentItem: '#/components/schemas/TabbedContentItemElementModel',
            accordion: '#/components/schemas/AccordionElementModel',
            accordionItem: '#/components/schemas/AccordionItemElementModel',
            carousel: '#/components/schemas/CarouselElementModel',
            carouselItem: '#/components/schemas/CarouselItemElementModel',
            twoUp: '#/components/schemas/TwoUpElementModel',
            textColumn: '#/components/schemas/TextColumnElementModel',
            settings: '#/components/schemas/SettingsElementModel',
            sitemap: '#/components/schemas/SitemapElementModel',
            richText: '#/components/schemas/RichTextElementModel',
            banner: '#/components/schemas/BannerElementModel'
        }
    }
} as const;

export const $IApiMediaWithCropsModel = {
    type: 'object',
    properties: {
        focalPoint: {
            '$ref': '#/components/schemas/ImageFocalPointModel'
        },
        crops: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ImageCropModel'
            },
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        name: {
            type: 'string',
            readOnly: true
        },
        mediaType: {
            type: 'string',
            readOnly: true
        },
        url: {
            type: 'string',
            readOnly: true
        },
        extension: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        width: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        height: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        bytes: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $IApiMediaWithCropsResponseModel = {
    type: 'object',
    properties: {
        path: {
            type: 'string',
            readOnly: true
        },
        createDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        updateDate: {
            type: 'string',
            format: 'date-time',
            readOnly: true
        },
        focalPoint: {
            '$ref': '#/components/schemas/ImageFocalPointModel'
        },
        crops: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ImageCropModel'
            },
            nullable: true,
            readOnly: true
        },
        id: {
            type: 'string',
            format: 'uuid',
            readOnly: true
        },
        name: {
            type: 'string',
            readOnly: true
        },
        mediaType: {
            type: 'string',
            readOnly: true
        },
        url: {
            type: 'string',
            readOnly: true
        },
        extension: {
            type: 'string',
            nullable: true,
            readOnly: true
        },
        width: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        height: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        bytes: {
            type: 'integer',
            format: 'int32',
            nullable: true,
            readOnly: true
        },
        properties: {
            type: 'object',
            additionalProperties: {},
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const $ImageCropCoordinatesModel = {
    type: 'object',
    properties: {
        x1: {
            type: 'number',
            format: 'double'
        },
        y1: {
            type: 'number',
            format: 'double'
        },
        x2: {
            type: 'number',
            format: 'double'
        },
        y2: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const $ImageCropModel = {
    type: 'object',
    properties: {
        alias: {
            type: 'string',
            nullable: true
        },
        width: {
            type: 'integer',
            format: 'int32'
        },
        height: {
            type: 'integer',
            format: 'int32'
        },
        coordinates: {
            '$ref': '#/components/schemas/ImageCropCoordinatesModel'
        }
    },
    additionalProperties: false
} as const;

export const $ImageFocalPointModel = {
    type: 'object',
    properties: {
        left: {
            type: 'number',
            format: 'double'
        },
        top: {
            type: 'number',
            format: 'double'
        }
    },
    additionalProperties: false
} as const;

export const $LinkTypeModel = {
    enum: ['Content', 'Media', 'External'],
    type: 'string'
} as const;

export const $PagedIApiContentResponseModel = {
    required: ['items', 'total'],
    type: 'object',
    properties: {
        total: {
            type: 'integer',
            format: 'int64'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiContentResponseModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $PagedIApiMediaWithCropsResponseModel = {
    required: ['items', 'total'],
    type: 'object',
    properties: {
        total: {
            type: 'integer',
            format: 'int64'
        },
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsResponseModel'
            }
        }
    },
    additionalProperties: false
} as const;

export const $PeopleContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/PeoplePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $PeopleContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/PeopleContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $PeoplePropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/SettingsPropertiesModel'
        },
        {
            '$ref': '#/components/schemas/BannerPropertiesModel'
        }
    ],
    properties: {
        content: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $PersonContentModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/PersonPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $PersonContentResponseModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiContentResponseModelBase'
        },
        {
            '$ref': '#/components/schemas/PersonContentModel'
        }
    ],
    additionalProperties: false
} as const;

export const $PersonPropertiesModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/SettingsPropertiesModel'
        },
        {
            '$ref': '#/components/schemas/BannerPropertiesModel'
        }
    ],
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        image: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        },
        jobTitle: {
            type: 'string',
            nullable: true
        },
        phoneNumber: {
            type: 'string',
            nullable: true
        },
        emailAddress: {
            type: 'string',
            nullable: true
        },
        cV: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        },
        admissionsQualifications: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        keyAreasOfPractice: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        },
        content: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $ProblemDetails = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        title: {
            type: 'string',
            nullable: true
        },
        status: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        detail: {
            type: 'string',
            nullable: true
        },
        instance: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: {}
} as const;

export const $PromotionalImageElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/PromotionalImagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $PromotionalImagePropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        image: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        },
        link: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/ApiLinkModel'
            },
            nullable: true
        }
    }
} as const;

export const $RichTextElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/RichTextPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $RichTextModel = {
    type: 'object',
    properties: {
        markup: {
            type: 'string'
        },
        blocks: {
            type: 'array',
            items: {
                oneOf: [
                    {
                        '$ref': '#/components/schemas/ApiBlockItemModel'
                    },
                    {
                        '$ref': '#/components/schemas/ApiBlockGridItemModel'
                    }
                ]
            }
        }
    },
    additionalProperties: false
} as const;

export const $RichTextPropertiesModel = {
    type: 'object',
    properties: {
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $SettingsElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/SettingsPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $SettingsPropertiesModel = {
    type: 'object',
    properties: {
        umbracoNaviHide: {
            type: 'boolean',
            nullable: true
        }
    }
} as const;

export const $SitemapElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/SitemapPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $SitemapPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        }
    }
} as const;

export const $TabbedContentElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TabbedContentPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TabbedContentItemElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TabbedContentItemPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TabbedContentItemPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $TabbedContentPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        tabs: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;

export const $TextColumnElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TextColumnPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TextColumnPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        }
    }
} as const;

export const $TextWithImageElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TextWithImagePropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TextWithImagePropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        text: {
            '$ref': '#/components/schemas/RichTextModel'
        },
        image: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/IApiMediaWithCropsModel'
            },
            nullable: true
        }
    }
} as const;

export const $TwoUpElementModel = {
    type: 'object',
    allOf: [
        {
            '$ref': '#/components/schemas/IApiElementModelBase'
        }
    ],
    properties: {
        properties: {
            '$ref': '#/components/schemas/TwoUpPropertiesModel'
        }
    },
    additionalProperties: false
} as const;

export const $TwoUpPropertiesModel = {
    type: 'object',
    properties: {
        title: {
            type: 'string',
            nullable: true
        },
        columns: {
            '$ref': '#/components/schemas/ApiBlockListModel'
        }
    }
} as const;