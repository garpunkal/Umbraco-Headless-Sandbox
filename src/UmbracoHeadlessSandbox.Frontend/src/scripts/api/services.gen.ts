// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import type { BaseHttpRequest } from './core/BaseHttpRequest';
import { type GetContentData, type GetContentResponse, type GetContent20Data, type GetContent20Response, type GetContentBySearch20Data, type GetContentBySearch20Response, type GetContentBySitemap20Data, type GetContentBySitemap20Response, type GetContentItemData, type GetContentItemResponse, type GetContentItemByPathData, type GetContentItemByPathResponse, type GetContentItemByPath20Data, type GetContentItemByPath20Response, type GetContentItemByIdData, type GetContentItemByIdResponse, type GetContentItemById20Data, type GetContentItemById20Response, type GetContentItems20Data, type GetContentItems20Response, type GetMediaData, type GetMediaResponse, type GetMedia20Data, type GetMedia20Response, type GetMediaItemData, type GetMediaItemResponse, type GetMediaItemByPathData, type GetMediaItemByPathResponse, type GetMediaItemByPath20Data, type GetMediaItemByPath20Response, type GetMediaItemByIdData, type GetMediaItemByIdResponse, type GetMediaItemById20Data, type GetMediaItemById20Response, type GetMediaItems20Data, type GetMediaItems20Response, GetMediaResponseTransformer, GetMedia20ResponseTransformer, GetMediaItemResponseTransformer, GetMediaItemByPathResponseTransformer, GetMediaItemByPath20ResponseTransformer, GetMediaItemByIdResponseTransformer, GetMediaItemById20ResponseTransformer, GetMediaItems20ResponseTransformer } from './types.gen';

export class ContentService {
    constructor(public readonly httpRequest: BaseHttpRequest) { }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.fetch Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found content items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found content items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel Success
     * @throws ApiError
     */
    public getContent(data: GetContentData = {}): CancelablePromise<GetContentResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fetch Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found content items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found content items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel Success
     * @throws ApiError
     */
    public getContent20(data: GetContent20Data = {}): CancelablePromise<GetContent20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.query
     * @param data.fetch Specifies the content items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found content items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found content items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found content items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentBySearch20(data: GetContentBySearch20Data = {}): CancelablePromise<GetContentBySearch20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/BySearch',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                query: data.query,
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns PagedIApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentBySitemap20(data: GetContentBySitemap20Data = {}): CancelablePromise<GetContentBySitemap20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/BySitemap',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                400: 'Bad Request',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItem(data: GetContentItemData = {}): CancelablePromise<GetContentItemResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                id: data.id,
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItemByPath(data: GetContentItemByPathData): CancelablePromise<GetContentItemByPathResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItemByPath20(data: GetContentItemByPath20Data): CancelablePromise<GetContentItemByPath20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItemById(data: GetContentItemByIdData): CancelablePromise<GetContentItemByIdResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/content/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItemById20(data: GetContentItemById20Data): CancelablePromise<GetContentItemById20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden',
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api#query-parameters) for more details on this.
     * @param data.acceptLanguage Defines the language to return. Use this when querying language variant content items.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @param data.preview Whether to request draft content.
     * @param data.startItem URL segment or GUID of a root content item.
     * @returns IApiContentResponseModel Success
     * @throws ApiError
     */
    public getContentItems20(data: GetContentItems20Data = {}): CancelablePromise<GetContentItems20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/content/items',
            headers: {
                'Accept-Language': data.acceptLanguage,
                'Api-Key': data.apiKey,
                Preview: data.preview,
                'Start-Item': data.startItem
            },
            query: {
                id: data.id,
                expand: data.expand,
                fields: data.fields
            },
            errors: {
                401: 'Unauthorized',
                403: 'Forbidden'
            }
        });
    }
    
}

export class MediaService {
    constructor(public readonly httpRequest: BaseHttpRequest) { }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.fetch Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found media items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found media items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns PagedIApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMedia(data: GetMediaData = {}): CancelablePromise<GetMediaResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand
            },
            responseTransformer: GetMediaResponseTransformer,
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.fetch Specifies the media items to fetch. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.filter Defines how to filter the fetched media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.sort Defines how to sort the found media items. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.skip Specifies the number of found media items to skip. Use this to control pagination of the response.
     * @param data.take Specifies the number of found media items to take. Use this to control pagination of the response.
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns PagedIApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMedia20(data: GetMedia20Data = {}): CancelablePromise<GetMedia20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                fetch: data.fetch,
                filter: data.filter,
                sort: data.sort,
                skip: data.skip,
                take: data.take,
                expand: data.expand,
                fields: data.fields
            },
            responseTransformer: GetMedia20ResponseTransformer,
            errors: {
                400: 'Bad Request'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItem(data: GetMediaItemData = {}): CancelablePromise<GetMediaItemResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                id: data.id,
                expand: data.expand
            },
            responseTransformer: GetMediaItemResponseTransformer
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItemByPath(data: GetMediaItemByPathData): CancelablePromise<GetMediaItemByPathResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand
            },
            responseTransformer: GetMediaItemByPathResponseTransformer,
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.path
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItemByPath20(data: GetMediaItemByPath20Data): CancelablePromise<GetMediaItemByPath20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/item/{path}',
            path: {
                path: data.path
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            responseTransformer: GetMediaItemByPath20ResponseTransformer,
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItemById(data: GetMediaItemByIdData): CancelablePromise<GetMediaItemByIdResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v1/media/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand
            },
            responseTransformer: GetMediaItemByIdResponseTransformer,
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItemById20(data: GetMediaItemById20Data): CancelablePromise<GetMediaItemById20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/item/{id}',
            path: {
                id: data.id
            },
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                expand: data.expand,
                fields: data.fields
            },
            responseTransformer: GetMediaItemById20ResponseTransformer,
            errors: {
                404: 'Not Found'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.expand Defines the properties that should be expanded in the response. Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.fields Explicitly defines which properties should be included in the response (by default all properties are included). Refer to [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api/media-delivery-api#query-parameters) for more details on this.
     * @param data.apiKey API key specified through configuration to authorize access to the API.
     * @returns IApiMediaWithCropsResponseModel Success
     * @throws ApiError
     */
    public getMediaItems20(data: GetMediaItems20Data = {}): CancelablePromise<GetMediaItems20Response> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/umbraco/delivery/api/v2/media/items',
            headers: {
                'Api-Key': data.apiKey
            },
            query: {
                id: data.id,
                expand: data.expand,
                fields: data.fields
            },
            responseTransformer: GetMediaItems20ResponseTransformer
        });
    }
    
}